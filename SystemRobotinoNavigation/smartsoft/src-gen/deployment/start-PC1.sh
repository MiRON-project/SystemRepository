#!/bin/sh
#--------------------------------------------------------------------------
# Code generated by the SmartSoft MDSD Toolchain
# The SmartSoft Toolchain has been developed by:
#  
# Service Robotics Research Center
# University of Applied Sciences Ulm
# Prittwitzstr. 10
# 89075 Ulm (Germany)
#
# Information about the SmartSoft MDSD Toolchain is available at:
# www.servicerobotik-ulm.de
#
# Please do not modify this file. It will be re-generated
# running the code generator.
#--------------------------------------------------------------------------
#
# start script for device PC1


PID_XTERM="/var/tmp/start-PC1-xterms.pid"
PID_COMPONENT_NAMES="/var/tmp/start-PC1-component-names.pid"

SCRIPT_DIR=`pwd`
SCRIPT_NAME=start-PC1.sh

export SMART_ROOT_DEPLOYMENT=$SCRIPT_DIR

#######
## case
case "$1" in
	    
	    
#########################################################################################
## start
start)

true > $PID_XTERM
true > $PID_COMPONENT_NAMES

echo "Starting scenario..."
date -R

# CONFIGURE NAMING SERVICE
	export SMART_NS_ADDR=c26-26-robotino3:20002

echo "Stopping Naming Service..."
killall AceSmartSoftNamingService &
test -e SMART_NAMES && rm -f SMART_NAMES
sleep 1
echo Starting Naming Service...
rm -f AceSmartSoftNamingService.log
xterm -l -lf AceSmartSoftNamingService.log -title "AceSmartSoftNamingService" -hold -e "export LD_LIBRARY_PATH=$SCRIPT_DIR:\$LD_LIBRARY_PATH; ./NamingService/AceSmartSoftNamingService --ns-port 20002 --ns-dir ./ --ns-file SMART_NAMES --filename=ns_config.ini; echo; echo; echo 'Naming Service exited'; /bin/bash" &
echo $! >> $PID_XTERM
echo AceSmartSoftNamingService >> $PID_COMPONENT_NAMES
sleep 1

## start components
export SMART_IP=c26-26-robotino3
echo "starting components..."

# Component instance ComponentKB_11
echo
echo "############################################"
echo "## Starting component instance ComponentKB_11"
cd $SCRIPT_DIR
echo "executing startstop-hooks-ComponentKB_11.sh (errors might be ignored)"
bash startstop-hooks-ComponentKB_11.sh pre-start
cd $SCRIPT_DIR/ComponentKB_11_data
rm -f "../ComponentKB_11.log"
xterm -l -lf "../ComponentKB_11.log" -title "ComponentKB_11@PC1 Component" -hold -e "export LD_LIBRARY_PATH=$SCRIPT_DIR:\$LD_LIBRARY_PATH; $SCRIPT_DIR/ComponentKB -filename=$SCRIPT_DIR/ComponentKB_11.ini; echo; echo; echo 'ComponentKB_11 exited.'; echo; /bin/bash --login" &
echo $! >> $PID_XTERM
echo ComponentKB >> $PID_COMPONENT_NAMES
cd $SCRIPT_DIR
bash startstop-hooks-ComponentKB_11.sh post-start
echo -e "\n\n\n"

# Component instance ComponentLaserLMS1xx
echo
echo "############################################"
echo "## Starting component instance ComponentLaserLMS1xx"
cd $SCRIPT_DIR
echo "executing startstop-hooks-ComponentLaserLMS1xx.sh (errors might be ignored)"
bash startstop-hooks-ComponentLaserLMS1xx.sh pre-start
cd $SCRIPT_DIR/ComponentLaserLMS1xx_data
rm -f "../ComponentLaserLMS1xx.log"
xterm -l -lf "../ComponentLaserLMS1xx.log" -title "ComponentLaserLMS1xx@PC1 Component" -hold -e "export LD_LIBRARY_PATH=$SCRIPT_DIR:\$LD_LIBRARY_PATH; $SCRIPT_DIR/ComponentLaserLMS1xx -filename=$SCRIPT_DIR/ComponentLaserLMS1xx.ini; echo; echo; echo 'ComponentLaserLMS1xx exited.'; echo; /bin/bash --login" &
echo $! >> $PID_XTERM
echo ComponentLaserLMS1xx >> $PID_COMPONENT_NAMES
cd $SCRIPT_DIR
bash startstop-hooks-ComponentLaserLMS1xx.sh post-start
echo -e "\n\n\n"

# Component instance ComponentRobotinoBaseServer
echo
echo "############################################"
echo "## Starting component instance ComponentRobotinoBaseServer"
cd $SCRIPT_DIR
echo "executing startstop-hooks-ComponentRobotinoBaseServer.sh (errors might be ignored)"
bash startstop-hooks-ComponentRobotinoBaseServer.sh pre-start
cd $SCRIPT_DIR/ComponentRobotinoBaseServer_data
rm -f "../ComponentRobotinoBaseServer.log"
xterm -l -lf "../ComponentRobotinoBaseServer.log" -title "ComponentRobotinoBaseServer@PC1 Component" -hold -e "export LD_LIBRARY_PATH=$SCRIPT_DIR:\$LD_LIBRARY_PATH; $SCRIPT_DIR/ComponentRobotinoBaseServer -filename=$SCRIPT_DIR/ComponentRobotinoBaseServer.ini; echo; echo; echo 'ComponentRobotinoBaseServer exited.'; echo; /bin/bash --login" &
echo $! >> $PID_XTERM
echo ComponentRobotinoBaseServer >> $PID_COMPONENT_NAMES
cd $SCRIPT_DIR
bash startstop-hooks-ComponentRobotinoBaseServer.sh post-start
echo -e "\n\n\n"

# Component instance ComponentTCLSequencer
echo
echo "############################################"
echo "## Starting component instance ComponentTCLSequencer"
cd $SCRIPT_DIR
echo "executing startstop-hooks-ComponentTCLSequencer.sh (errors might be ignored)"
bash startstop-hooks-ComponentTCLSequencer.sh pre-start
cd $SCRIPT_DIR/ComponentTCLSequencer_data
rm -f "../ComponentTCLSequencer.log"
xterm -l -lf "../ComponentTCLSequencer.log" -title "ComponentTCLSequencer@PC1 Component" -hold -e "export LD_LIBRARY_PATH=$SCRIPT_DIR:\$LD_LIBRARY_PATH; $SCRIPT_DIR/ComponentTCLSequencer -filename=$SCRIPT_DIR/ComponentTCLSequencer.ini; echo; echo; echo 'ComponentTCLSequencer exited.'; echo; /bin/bash --login" &
echo $! >> $PID_XTERM
echo ComponentTCLSequencer >> $PID_COMPONENT_NAMES
cd $SCRIPT_DIR
bash startstop-hooks-ComponentTCLSequencer.sh post-start
echo -e "\n\n\n"

# Component instance SmartAmcl
echo
echo "############################################"
echo "## Starting component instance SmartAmcl"
cd $SCRIPT_DIR
echo "executing startstop-hooks-SmartAmcl.sh (errors might be ignored)"
bash startstop-hooks-SmartAmcl.sh pre-start
cd $SCRIPT_DIR/SmartAmcl_data
rm -f "../SmartAmcl.log"
xterm -l -lf "../SmartAmcl.log" -title "SmartAmcl@PC1 Component" -hold -e "export LD_LIBRARY_PATH=$SCRIPT_DIR:\$LD_LIBRARY_PATH; $SCRIPT_DIR/SmartAmcl -filename=$SCRIPT_DIR/SmartAmcl.ini; echo; echo; echo 'SmartAmcl exited.'; echo; /bin/bash --login" &
echo $! >> $PID_XTERM
echo SmartAmcl >> $PID_COMPONENT_NAMES
cd $SCRIPT_DIR
bash startstop-hooks-SmartAmcl.sh post-start
echo -e "\n\n\n"

# Component instance SmartCdlServer1
echo
echo "############################################"
echo "## Starting component instance SmartCdlServer1"
cd $SCRIPT_DIR
echo "executing startstop-hooks-SmartCdlServer1.sh (errors might be ignored)"
bash startstop-hooks-SmartCdlServer1.sh pre-start
cd $SCRIPT_DIR/SmartCdlServer1_data
rm -f "../SmartCdlServer1.log"
xterm -l -lf "../SmartCdlServer1.log" -title "SmartCdlServer1@PC1 Component" -hold -e "export LD_LIBRARY_PATH=$SCRIPT_DIR:\$LD_LIBRARY_PATH; $SCRIPT_DIR/SmartCdlServer -filename=$SCRIPT_DIR/SmartCdlServer1.ini; echo; echo; echo 'SmartCdlServer1 exited.'; echo; /bin/bash --login" &
echo $! >> $PID_XTERM
echo SmartCdlServer >> $PID_COMPONENT_NAMES
cd $SCRIPT_DIR
bash startstop-hooks-SmartCdlServer1.sh post-start
echo -e "\n\n\n"

# Component instance SmartJoystickNavigation
echo
echo "############################################"
echo "## Starting component instance SmartJoystickNavigation"
cd $SCRIPT_DIR
echo "executing startstop-hooks-SmartJoystickNavigation.sh (errors might be ignored)"
bash startstop-hooks-SmartJoystickNavigation.sh pre-start
cd $SCRIPT_DIR/SmartJoystickNavigation_data
rm -f "../SmartJoystickNavigation.log"
xterm -l -lf "../SmartJoystickNavigation.log" -title "SmartJoystickNavigation@PC1 Component" -hold -e "export LD_LIBRARY_PATH=$SCRIPT_DIR:\$LD_LIBRARY_PATH; $SCRIPT_DIR/SmartJoystickNavigation -filename=$SCRIPT_DIR/SmartJoystickNavigation.ini; echo; echo; echo 'SmartJoystickNavigation exited.'; echo; /bin/bash --login" &
echo $! >> $PID_XTERM
echo SmartJoystickNavigation >> $PID_COMPONENT_NAMES
cd $SCRIPT_DIR
bash startstop-hooks-SmartJoystickNavigation.sh post-start
echo -e "\n\n\n"

# Component instance SmartJoystickServer
echo
echo "############################################"
echo "## Starting component instance SmartJoystickServer"
cd $SCRIPT_DIR
echo "executing startstop-hooks-SmartJoystickServer.sh (errors might be ignored)"
bash startstop-hooks-SmartJoystickServer.sh pre-start
cd $SCRIPT_DIR/SmartJoystickServer_data
rm -f "../SmartJoystickServer.log"
xterm -l -lf "../SmartJoystickServer.log" -title "SmartJoystickServer@PC1 Component" -hold -e "export LD_LIBRARY_PATH=$SCRIPT_DIR:\$LD_LIBRARY_PATH; $SCRIPT_DIR/SmartJoystickServer -filename=$SCRIPT_DIR/SmartJoystickServer.ini; echo; echo; echo 'SmartJoystickServer exited.'; echo; /bin/bash --login" &
echo $! >> $PID_XTERM
echo SmartJoystickServer >> $PID_COMPONENT_NAMES
cd $SCRIPT_DIR
bash startstop-hooks-SmartJoystickServer.sh post-start
echo -e "\n\n\n"

# Component instance SmartMapperGridMap1
echo
echo "############################################"
echo "## Starting component instance SmartMapperGridMap1"
cd $SCRIPT_DIR
echo "executing startstop-hooks-SmartMapperGridMap1.sh (errors might be ignored)"
bash startstop-hooks-SmartMapperGridMap1.sh pre-start
cd $SCRIPT_DIR/SmartMapperGridMap1_data
rm -f "../SmartMapperGridMap1.log"
xterm -l -lf "../SmartMapperGridMap1.log" -title "SmartMapperGridMap1@PC1 Component" -hold -e "export LD_LIBRARY_PATH=$SCRIPT_DIR:\$LD_LIBRARY_PATH; $SCRIPT_DIR/SmartMapperGridMap -filename=$SCRIPT_DIR/SmartMapperGridMap1.ini; echo; echo; echo 'SmartMapperGridMap1 exited.'; echo; /bin/bash --login" &
echo $! >> $PID_XTERM
echo SmartMapperGridMap >> $PID_COMPONENT_NAMES
cd $SCRIPT_DIR
bash startstop-hooks-SmartMapperGridMap1.sh post-start
echo -e "\n\n\n"

# Component instance SmartPlannerBreadthFirstSearch1
echo
echo "############################################"
echo "## Starting component instance SmartPlannerBreadthFirstSearch1"
cd $SCRIPT_DIR
echo "executing startstop-hooks-SmartPlannerBreadthFirstSearch1.sh (errors might be ignored)"
bash startstop-hooks-SmartPlannerBreadthFirstSearch1.sh pre-start
cd $SCRIPT_DIR/SmartPlannerBreadthFirstSearch1_data
rm -f "../SmartPlannerBreadthFirstSearch1.log"
xterm -l -lf "../SmartPlannerBreadthFirstSearch1.log" -title "SmartPlannerBreadthFirstSearch1@PC1 Component" -hold -e "export LD_LIBRARY_PATH=$SCRIPT_DIR:\$LD_LIBRARY_PATH; $SCRIPT_DIR/SmartPlannerBreadthFirstSearch -filename=$SCRIPT_DIR/SmartPlannerBreadthFirstSearch1.ini; echo; echo; echo 'SmartPlannerBreadthFirstSearch1 exited.'; echo; /bin/bash --login" &
echo $! >> $PID_XTERM
echo SmartPlannerBreadthFirstSearch >> $PID_COMPONENT_NAMES
cd $SCRIPT_DIR
bash startstop-hooks-SmartPlannerBreadthFirstSearch1.sh post-start
echo -e "\n\n\n"


cd $SCRIPT_DIR

;; ## start


#########################################################################################
## stop
stop)
cd $SCRIPT_DIR
bash startstop-hooks-ComponentKB_11.sh pre-stop
bash startstop-hooks-ComponentLaserLMS1xx.sh pre-stop
bash startstop-hooks-ComponentRobotinoBaseServer.sh pre-stop
bash startstop-hooks-ComponentTCLSequencer.sh pre-stop
bash startstop-hooks-SmartAmcl.sh pre-stop
bash startstop-hooks-SmartCdlServer1.sh pre-stop
bash startstop-hooks-SmartJoystickNavigation.sh pre-stop
bash startstop-hooks-SmartJoystickServer.sh pre-stop
bash startstop-hooks-SmartMapperGridMap1.sh pre-stop
bash startstop-hooks-SmartPlannerBreadthFirstSearch1.sh pre-stop

echo "kill all components..."

for I in `cat $PID_COMPONENT_NAMES`; do
        echo $I
        killall -2 $I
done
rm $PID_COMPONENT_NAMES

sleep 3

for I in `cat $PID_XTERM`; do
        echo $I
        kill -2 $I
done
rm $PID_XTERM



test -e SMART_NAMES && rm -f SMART_NAMES

bash startstop-hooks-ComponentKB_11.sh post-stop
bash startstop-hooks-ComponentLaserLMS1xx.sh post-stop
bash startstop-hooks-ComponentRobotinoBaseServer.sh post-stop
bash startstop-hooks-ComponentTCLSequencer.sh post-stop
bash startstop-hooks-SmartAmcl.sh post-stop
bash startstop-hooks-SmartCdlServer1.sh post-stop
bash startstop-hooks-SmartJoystickNavigation.sh post-stop
bash startstop-hooks-SmartJoystickServer.sh post-stop
bash startstop-hooks-SmartMapperGridMap1.sh post-stop
bash startstop-hooks-SmartPlannerBreadthFirstSearch1.sh post-stop


# collect log files
ls -l *.log && (
	pwd
	tar czvf PC1-logs-$(date +"%Y%m%d%H%M").tar.gz *.log
	rm *.log
)

;; ## stop



#########################################################################################
## menu

menu-start)
	bash $SCRIPT_NAME start
	cd $SCRIPT_DIR
	bash $SCRIPT_NAME menu
;;

menu-stop)
	bash $SCRIPT_NAME stop
	cd $SCRIPT_DIR
	bash $SCRIPT_NAME menu
;;

menu-tile)
	bash tiler.sh
	cd $SCRIPT_DIR
	bash $SCRIPT_NAME menu
;;

menu)

#wmctrl -r :ACTIVE: -b add,above
ACTION=$(whiptail --title "Scenario Control" --menu "Choose an option" 12 35 4 "menu-start" "Start Scenario" "menu-stop" "Stop Scenario" "menu-tile" "Arrange terminals" "quit" "Quit to console" 3>&1 1>&2 2>&3)
#whiptail --title "Scenario Control" --menu "Choose an option" 10 30 3 "menu-start" "Start Scenario" "menu-stop" "Stop Scenario" "quit" "Quit to console" 2>/tmp/whip
#ACTION=`cat /tmp/whip`

cd $SCRIPT_DIR
bash $SCRIPT_NAME $ACTION

;; ## menu

quit)
	bash $SCRIPT_NAME stop
;;
		
		
#########################################################################################
## default
*)
echo "No such parameter: $1"
echo "Usage: $SCRIPT_NAME {start|stop|menu-start|menu-stop|menu}"
exit 1
;;

esac
